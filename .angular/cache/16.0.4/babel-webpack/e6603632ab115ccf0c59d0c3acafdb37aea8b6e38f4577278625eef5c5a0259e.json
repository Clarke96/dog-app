{"ast":null,"code":"import { ofType, createEffect } from '@ngrx/effects';\nimport { of, switchMap } from 'rxjs';\nimport { ApiActions, DogsActions, DogsAllActions } from './dogs.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../data-access.service\";\nclass DogEffects {\n  constructor(actions$, dataService) {\n    this.actions$ = actions$;\n    this.dataService = dataService;\n    this.loadOut$ = createEffect(() => {\n      return this.actions$.pipe(ofType(ApiActions.retrievedDogsList), switchMap(() => this.dataService.getAllDogs().pipe(switchMap(dogs => {\n        const dogIds = dogs.map(dog => dog.id);\n        return of(DogsAllActions.retrievedDogsList({\n          dogs\n        }), DogsActions.modifyDogs({\n          dogIds\n        }));\n      }))));\n    });\n  }\n}\nDogEffects.ɵfac = function DogEffects_Factory(t) {\n  return new (t || DogEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.DataAccessService));\n};\nDogEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DogEffects,\n  factory: DogEffects.ɵfac\n});\nexport { DogEffects };","map":{"version":3,"names":["ofType","createEffect","of","switchMap","ApiActions","DogsActions","DogsAllActions","DogEffects","constructor","actions$","dataService","loadOut$","pipe","retrievedDogsList","getAllDogs","dogs","dogIds","map","dog","id","modifyDogs","i0","ɵɵinject","i1","Actions","i2","DataAccessService","factory","ɵfac"],"sources":["/Users/seanclarke/work/angular/dog/src/app/shared/state/dogs.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of, switchMap } from 'rxjs';\nimport { DataAccessService } from '../data-access.service';\nimport { ApiActions, DogsActions, DogsAllActions } from './dogs.actions';\n\n@Injectable()\nexport class DogEffects {\n  loadOut$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ApiActions.retrievedDogsList),\n      switchMap(() =>\n        this.dataService.getAllDogs().pipe(\n          switchMap(dogs => {\n            const dogIds = dogs.map(dog => dog.id);\n            return of(\n              DogsAllActions.retrievedDogsList({ dogs }),\n              DogsActions.modifyDogs({ dogIds })\n            );\n          })\n        )\n      )\n    );\n  });\n\n  constructor(\n    private actions$: Actions,\n    private dataService: DataAccessService\n  ) {}\n}\n"],"mappings":"AACA,SAAkBA,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAC7D,SAASC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAEpC,SAASC,UAAU,EAAEC,WAAW,EAAEC,cAAc,QAAQ,gBAAgB;;;;AAExE,MACaC,UAAU;EAkBrBC,YACUC,QAAiB,EACjBC,WAA8B;IAD9B,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,WAAW,GAAXA,WAAW;IAnBrB,KAAAC,QAAQ,GAAGV,YAAY,CAAC,MAAK;MAC3B,OAAO,IAAI,CAACQ,QAAQ,CAACG,IAAI,CACvBZ,MAAM,CAACI,UAAU,CAACS,iBAAiB,CAAC,EACpCV,SAAS,CAAC,MACR,IAAI,CAACO,WAAW,CAACI,UAAU,EAAE,CAACF,IAAI,CAChCT,SAAS,CAACY,IAAI,IAAG;QACf,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,CAAC;QACtC,OAAOjB,EAAE,CACPI,cAAc,CAACO,iBAAiB,CAAC;UAAEE;QAAI,CAAE,CAAC,EAC1CV,WAAW,CAACe,UAAU,CAAC;UAAEJ;QAAM,CAAE,CAAC,CACnC;MACH,CAAC,CAAC,CACH,CACF,CACF;IACH,CAAC,CAAC;EAKC;;AArBQT,UAAU,C;mBAAVA,UAAU,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;AAAA;AAAVnB,UAAU,C;SAAVA,UAAU;EAAAoB,OAAA,EAAVpB,UAAU,CAAAqB;AAAA;SAAVrB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}